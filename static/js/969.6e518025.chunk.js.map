{"version":3,"file":"static/js/969.6e518025.chunk.js","mappings":"gOAIaA,EAAUC,EAAAA,GAAAA,GAAH,0cAkBPC,EAAaD,EAAAA,GAAAA,IAAH,6DAKVE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,0IASRI,EAAUJ,EAAAA,GAAAA,IAAH,6jBAYPK,EAAQL,EAAAA,GAAAA,GAAH,mKAQLM,EAAON,EAAAA,GAAAA,EAAH,yIAOJO,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,oD,6EChCvB,EA5Bc,SAAC,GAA8B,IAA5BS,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAEvBC,EAAMD,EAAI,UAAMA,GAAN,OAAaD,EAAKG,IAAlB,UAA4BH,EAAKG,IAEjD,OACI,SAACN,EAAD,CACIO,GAAE,UAAKF,GACPG,MAAO,CAAEC,KAAMP,GAFnB,UAII,UAACV,EAAD,WACKW,EAAKO,aACH,SAAChB,EAAD,CACCiB,IAAG,8CAAyCR,EAAKO,aACjDE,IAAG,iBAAYT,EAAKU,UACrB,SAACnB,EAAD,CACCiB,IAAKG,EACLF,IAAG,iBAAYT,EAAKU,SAEvBV,EAAKY,QAAS,SAACpB,EAAD,KACf,UAACE,EAAD,YACI,SAACC,EAAD,UAAQK,EAAKa,kBACb,SAAC,EAAD,UAAOb,EAAKc,aAAaC,MAAM,EAAG,YAKrD,C,sDC5BM,IAAMC,EAAuB,WAChC,MAAO,CACHC,QAAS,IACTC,MAAO,QACPC,QAAS,OACTC,gBAAiB,qBACjBC,SAAU,YACVC,SAAU,OACVC,UAAW,qBACXC,SAAU,OAEjB,C,gMCVY7B,EAAQL,EAAAA,GAAAA,GAAH,iPAcLmC,EAAOnC,EAAAA,GAAAA,GAAH,yG,mBCQjB,EApB2B,SAAC,GAAe,IAAboC,EAAY,EAAZA,MACpB3B,GAAW4B,EAAAA,EAAAA,MAEjB,OACQ,iCACA,SAAChC,EAAD,oCACI,SAAC8B,EAAD,UACKC,EAAME,KAAI,SAAA5B,GAAI,OACX,SAAC6B,EAAA,EAAD,CAEI9B,SAAUA,EACVC,KAAMA,EACNC,KAAK,WAHAD,EAAKG,GAFH,QAWlC,E,UCwBD,EAvCa,WACT,OAA4C2B,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAY,mCAAG,WAAMC,GAAN,gFACXC,GAAUrB,EAAAA,EAAAA,KADC,SAIbkB,GAAa,GAJA,UAKUI,EAAAA,EAAAA,GAAY,wBAAyBF,GAL/C,OAKPG,EALO,OAMbP,GAAkB,OAAIO,EAASC,UANlB,gDASK,iBAAf,KAAMC,MACLC,EAAAA,OAAAA,QAAe,sDAAuDL,GAV7D,yBAcbH,GAAa,GAdA,oFAAH,sDAyBlB,OAPAS,EAAAA,EAAAA,YAAU,WACF,IAAMP,EAAa,IAAIQ,gBAGtB,OAFDT,EAAaC,GAEL,kBAAMA,EAAWS,OAAjB,CACX,GAAE,KAGH,gCACKZ,IAAa,SAACa,EAAA,EAAD,CAAQC,MAAM,uBAC3BhB,EAAeiB,QACd,SAAC,EAAD,CAAoBtB,MAAOK,IAC3B,OAGb,C,2EC1CDkB,IAAAA,SAAAA,QAAyB,6BACzB,IAGMX,EAAW,mCAAG,WAAOY,EAAad,EAAYe,GAAhC,uFAEMF,IAAAA,IAAUC,EAAa,CACzCE,OAAQ,CACJC,QAPI,mCAQJF,MAAAA,GAEJG,OAAQlB,EAAWkB,SAPP,cAEVC,EAFU,yBASTA,EAAQC,MATC,2CAAH,0DAcjB,K","sources":["components/Item/Item.styled.js","components/Item/Item.jsx","constants/notifyOptions.js","components/ListTrendingMovies/ListTrendingMovies.styled.js","components/ListTrendingMovies/ListTrendingMovies.jsx","pages/Home/Home.jsx","utilites/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { MdOutlineNoAdultContent } from \"react-icons/md\";\nimport { Link } from \"react-router-dom\";\n\nexport const Wrapper = styled.li`\n    width: 260px;\n    height: 360px;\n    background-color: rgba(0, 0, 0, 0.6);\n    border-radius: 5px;\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    transition: transform 0.3s ease;\n    overflow: hidden;\n    position: relative;\n\n    :hover, :focus {\n        tansform: scale(1.5);\n        box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n        transform: scale(1.05);\n        cursor: pointer;\n    }\n`;\n\nexport const PreviewImg = styled.img`\n    width: 100%;\n    height: 100%;\n`;\n\nexport const SvgAdult = styled(MdOutlineNoAdultContent)`\n    position: absolute;\n    top: 8px;\n    left: 8px;\n    width: 28px;\n    height: 28px;\n    color: #cc0000;\n`;\n\nexport const Details = styled.div`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    padding: 12px;\n    width: 100%;\n    height: 20%;\n    overflow: auto;\n    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.9));\n    box-shadow: rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px;\n    `;\n\nexport const Title = styled.h2`\n    margin-block-start: 0;\n    margin-block-end: 0;\n    margin-bottom: 12px;\n    font-size: 20px;\n    color: rgb(255, 245, 238, 0.8);\n`;\n\nexport const Date = styled.p`\n    margin-block-start: 0;\n    margin-block-end: 0;\n    font-size: 20px;\n    color: rgb(255, 245, 238, 0.8);\n`;\n\nexport const LinkStyled = styled(Link)`\n    text-decoration: none;\n`;","import { LinkStyled, Wrapper, PreviewImg, Details, SvgAdult, Title, Date } from \"./Item.styled\";\nimport defaultImage from '../../images/default-movie-preview.jpg';\n\nconst Item  = ({ location, item, path }) => {\n\n    const url = path ? `${path}${item.id}` : `${item.id}`;\n\n    return (\n        <LinkStyled \n            to={`${url}`} \n            state={{ from: location}}\n        >\n            <Wrapper>\n                {item.poster_path \n                ? (<PreviewImg \n                    src={`https://image.tmdb.org/t/p/original/${item.poster_path}`} \n                    alt={`Poster ${item.title}`} />)\n                : (<PreviewImg \n                    src={defaultImage} \n                    alt={`Poster ${item.title}`} />)\n                }\n                {item.adult && <SvgAdult />}\n                <Details>\n                    <Title>{item.original_title}</Title>\n                    <Date>{item.release_date.slice(0, 4)}</Date>\n                </Details>\n            </Wrapper>\n        </LinkStyled>\n    )\n};\n\nexport default Item;","\nexport const notifyOptionsFailure = () => {\n    return {\n        timeout: 4000,\n        width: '400px',\n        svgSize: '80px',\n        backgroundColor: 'rgb(204, 0, 0, .7)',\n        position: 'right-top',\n        distance: '60px',\n        textColor: 'rgb(255, 245, 238)',\n        fontSize: '20px',\n      };\n};\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n    border: 0;\n    padding: 0;\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    margin: -1px;\n`;\n\nexport const List = styled.ul`\n    list-style: none;\n    display: flex;\n    gap: 28px;\n    flex-wrap: wrap;\n`;\n","import { useLocation, } from \"react-router-dom\";\nimport { List, Title } from \"./ListTrendingMovies.styled\";\nimport Item from \"components/Item\";\n\nconst ListTrendingMovies = ({ items }) => {\n    const location = useLocation();\n\n    return (\n            <>\n            <Title>List Trending Movies</Title>\n                <List>\n                    {items.map(item => (\n                        <Item \n                            key={item.id} \n                            location={location}\n                            item={item}\n                            path='movies/'\n                            />\n                ))}\n                </List> \n            </>\n    )\n};\n\nexport default ListTrendingMovies;","import { useEffect, useState } from \"react\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { notifyOptionsFailure } from \"constants/notifyOptions\";\nimport fetchMovies from '../../utilites/api';\nimport ListTrendingMovies from \"components/ListTrendingMovies\";\nimport Loader from \"components/Loader/Loader\";\n\nconst Home = () => {\n    const [trendingMovies, setTrendingMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const searchTrends = async controller => {\n        const options = notifyOptionsFailure();\n\n        try {\n            setIsLoading(true);\n            const response = await fetchMovies('/3/trending/movie/day', controller);\n            setTrendingMovies([...response.results]);\n\n        } catch (error) {\n            if(error.code !== 'ERR_CANCELED') {\n                Notify.failure('OOps! Error loading information. Please, try again!', options);\n            };\n        } \n        finally {\n            setIsLoading(false);\n        };\n    };\n\n    useEffect(() => {\n            const controller = new AbortController();\n            searchTrends(controller);\n\n             return () => controller.abort();\n        }, []);\n\n    return (\n        <>\n            {isLoading && <Loader color=\"rgb(204, 0, 0, .7)\" />}\n            {trendingMovies.length \n            ? <ListTrendingMovies items={trendingMovies} />\n            : null}\n        </>\n    );\n};\n\nexport default Home;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '84bdbe2f4baecea0c1be28902afc6a5b';\n\n\nconst fetchMovies = async (typeRequest, controller, query) => {\n\n    const request = await axios.get(typeRequest, {\n        params: {\n            api_key: API_KEY,\n            query,\n        },\n        signal: controller.signal,\n    });\n    return request.data;\n};\n\n\n\nexport default fetchMovies;"],"names":["Wrapper","styled","PreviewImg","SvgAdult","MdOutlineNoAdultContent","Details","Title","Date","LinkStyled","Link","location","item","path","url","id","to","state","from","poster_path","src","alt","title","defaultImage","adult","original_title","release_date","slice","notifyOptionsFailure","timeout","width","svgSize","backgroundColor","position","distance","textColor","fontSize","List","items","useLocation","map","Item","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","searchTrends","controller","options","fetchMovies","response","results","code","Notify","useEffect","AbortController","abort","Loader","color","length","axios","typeRequest","query","params","api_key","signal","request","data"],"sourceRoot":""}