{"version":3,"file":"static/js/398.fc854647.chunk.js","mappings":"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","sources":["components/Item/Item.styled.js","components/Item/Item.jsx","constants/notifyOptions.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/ListSearchMovies/ListSearchMovies.styled.js","components/ListSearchMovies/ListSearchMovies.jsx","pages/Movies/Movies.jsx","utilites/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { MdOutlineNoAdultContent } from \"react-icons/md\";\nimport { Link } from \"react-router-dom\";\n\nexport const Wrapper = styled.li`\n    width: 260px;\n    height: 360px;\n    background-color: rgba(0, 0, 0, 0.6);\n    border-radius: 5px;\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    transition: transform 0.3s ease;\n    overflow: hidden;\n    position: relative;\n\n    :hover, :focus {\n        tansform: scale(1.5);\n        box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n        transform: scale(1.05);\n        cursor: pointer;\n    }\n`;\n\nexport const PreviewImg = styled.img`\n    width: 100%;\n    height: 100%;\n`;\n\nexport const SvgAdult = styled(MdOutlineNoAdultContent)`\n    position: absolute;\n    top: 8px;\n    left: 8px;\n    width: 28px;\n    height: 28px;\n    color: #cc0000;\n`;\n\nexport const Details = styled.div`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    padding: 12px;\n    width: 100%;\n    height: 20%;\n    overflow: auto;\n    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.9));\n    box-shadow: rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px;\n    `;\n\nexport const Title = styled.h2`\n    margin-block-start: 0;\n    margin-block-end: 0;\n    margin-bottom: 12px;\n    font-size: 20px;\n    color: rgb(255, 245, 238, 0.8);\n`;\n\nexport const Date = styled.p`\n    margin-block-start: 0;\n    margin-block-end: 0;\n    font-size: 20px;\n    color: rgb(255, 245, 238, 0.8);\n`;\n\nexport const LinkStyled = styled(Link)`\n    text-decoration: none;\n`;","import { LinkStyled, Wrapper, PreviewImg, Details, SvgAdult, Title, Date } from \"./Item.styled\";\nimport defaultImage from '../../images/default-movie-preview.jpg';\n\nconst Item  = ({ location, item, path }) => {\n\n    const url = path ? `${path}${item.id}` : `${item.id}`;\n\n    return (\n        <LinkStyled \n            to={`${url}`} \n            state={{ from: location}}\n        >\n            <Wrapper>\n                {item.poster_path \n                ? (<PreviewImg \n                    src={`https://image.tmdb.org/t/p/original/${item.poster_path}`} \n                    alt={`Poster ${item.title}`} />)\n                : (<PreviewImg \n                    src={defaultImage} \n                    alt={`Poster ${item.title}`} />)\n                }\n                {item.adult && <SvgAdult />}\n                <Details>\n                    <Title>{item.original_title}</Title>\n                    <Date>{item.release_date.slice(0, 4)}</Date>\n                </Details>\n            </Wrapper>\n        </LinkStyled>\n    )\n};\n\nexport default Item;","\nexport const notifyOptionsFailure = () => {\n    return {\n        timeout: 4000,\n        width: '400px',\n        svgSize: '80px',\n        backgroundColor: 'rgb(204, 0, 0, .7)',\n        position: 'right-top',\n        distance: '60px',\n        textColor: 'rgb(255, 245, 238)',\n        fontSize: '20px',\n      };\n};\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n\n`;\n\nexport const Input = styled.input`\n    width: 280px;\n    padding: 12px;\n    border: 1px solid rgb(255, 245, 238, 0.2);\n    border-radius: 5px;\n    background-color: rgb(33, 7, 5, 0.3);\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n    font-size: 20px;\n    color: rgb(255, 245, 238, 0.8);\n\n    &:hover, :focus {\n        border: 1px solid rgb(255, 245, 238, 0.8);\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 600px;\n      }\n\n`;\n\nexport const Submit = styled.button`\n    padding: 12px;\n    border: 1px solid rgb(255, 245, 238, 0.2);\n    border-radius: 5px;\n    background-color: rgb(33, 7, 5, 0.3);\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n    font-size: 20px;\n    color: rgb(255, 245, 238, 0.8);\n\n    &:hover, :focus {\n        border: 1px solid rgb(255, 245, 238, 0.8);\n        color: rgb(255, 245, 238, 0.8);\n    }\n`;","import { useState } from \"react\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { notifyOptionsFailure } from \"constants/notifyOptions\";\nimport { Input, Form, Submit } from \"./SearchForm.styled\";\n\nconst SearchForm = ({ onSubmitForm }) => {\n    const [valueInput, setValueInput] = useState('');\n    const options = notifyOptionsFailure();\n\n    const makeSubmit = e => {\n        e.preventDefault();\n        if(!valueInput) {\n            Notify.failure('Please, write the name of the movie!', options);\n            return;\n        };\n\n        onSubmitForm(valueInput);\n        setValueInput('');\n    };\n\n    return (\n        <Form\n            onSubmit={makeSubmit}\n        >\n            <Input \n                type='text'\n                value={valueInput}\n                placeholder=\"Enter movie title...\"\n                onChange={e => setValueInput(e.target.value)}\n            />\n            <Submit \n                type='submit'\n            >Search</Submit>\n        </Form>\n    )\n};\n\nexport default SearchForm;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n    \n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n    border: 0;\n    padding: 0;\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    margin: -1px;\n`;\n\nexport const List = styled.ul`\n    list-style: none;\n    display: flex;\n    gap: 28px;\n    flex-wrap: wrap;\n`;\n","import { useLocation } from \"react-router-dom\";\nimport { List, Title } from \"./ListSearchMovies.styled\";\nimport Item from \"components/Item\";\n\nconst ListSearchMovies = ({ items }) => {\n    const location = useLocation();\n\n    return (\n       <>\n        <Title>List Movies</Title>\n         <List>\n            {items.map(item => (\n                <Item \n                    key={item.id} \n                    location={location}\n                    item={item}\n                    />\n            ))}\n         </List> \n       </> \n    )\n};\n\nexport default ListSearchMovies;","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { notifyOptionsFailure } from \"constants/notifyOptions\";\nimport fetchFilms from '../../utilites/api';\nimport SearchForm from 'components/SearchForm';\nimport ListSearchFilms from 'components/ListSearchMovies';\n\nconst Movies = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchFilms, setSearchFilms] = useState([]);\n    const [searchValue, setSearchValue] = useSearchParams();\n    const valueSearch = searchValue.get('value');\n\n    const searchMovies = async (controller, valueSearch) => {\n        const options = notifyOptionsFailure();\n        try {\n            setIsLoading(true);\n            const response = await fetchFilms('/3/search/movie', controller, valueSearch);\n            if(!response.results.length) {\n                Notify.failure('Sorry, your query did not find anything. Try changing your query!', options);\n                return;\n            };\n            setSearchFilms([...response.results]);\n        } catch(error) {\n            if(error.code !== 'ERR_CANCELED') {\n                Notify.failure('OOps! Error loading information. Please, try again!', options);\n            };\n        } finally {\n            setIsLoading(false);\n        };\n    };\n\n    useEffect(() => {\n        if(valueSearch) {\n            const controller = new AbortController();\n            searchMovies(controller, valueSearch);\n            return () => controller.abort();\n        };\n    }, [valueSearch]);\n\n    \n    const handleSubmit = async value => {\n        setSearchValue({ value });\n};\n\n    return (\n        <>\n        {isLoading && <SyncLoader color=\"rgb(204, 0, 0, .7)\" />}\n        <SearchForm \n            onSubmitForm={handleSubmit} \n        />\n        {searchFilms \n        ? <ListSearchFilms items={searchFilms} />\n        : null}\n    </>\n    );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '84bdbe2f4baecea0c1be28902afc6a5b';\n\n\nconst fetchMovies = async (typeRequest, controller, query) => {\n\n    const request = await axios.get(typeRequest, {\n        params: {\n            api_key: API_KEY,\n            query,\n        },\n        signal: controller.signal,\n    });\n    return request.data;\n};\n\n\n\nexport default fetchMovies;"],"names":["Wrapper","styled","PreviewImg","SvgAdult","MdOutlineNoAdultContent","Details","Title","Date","LinkStyled","Link","location","item","path","url","id","to","state","from","poster_path","src","alt","title","defaultImage","adult","original_title","release_date","slice","notifyOptionsFailure","timeout","width","svgSize","backgroundColor","position","distance","textColor","fontSize","Form","Input","Submit","onSubmitForm","useState","valueInput","setValueInput","options","onSubmit","e","preventDefault","Notify","type","value","placeholder","onChange","target","List","items","useLocation","map","Item","isLoading","setIsLoading","searchFilms","setSearchFilms","useSearchParams","searchValue","setSearchValue","valueSearch","get","searchMovies","controller","fetchFilms","response","results","length","code","useEffect","AbortController","abort","handleSubmit","color","axios","fetchMovies","typeRequest","query","params","api_key","signal","request","data"],"sourceRoot":""}