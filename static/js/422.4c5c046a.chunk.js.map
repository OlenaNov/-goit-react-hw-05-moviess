{"version":3,"file":"static/js/422.4c5c046a.chunk.js","mappings":"uUAEaA,EAAOC,EAAAA,GAAAA,GAAH,yG,oBCEJC,EAAUD,EAAAA,GAAAA,GAAH,0cAkBPE,EAAaF,EAAAA,GAAAA,IAAH,6DAKVG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,IAAPJ,CAAH,0IASRK,EAAUL,EAAAA,GAAAA,IAAH,+jBAYPM,EAAQN,EAAAA,GAAAA,GAAH,mKAQLO,EAAOP,EAAAA,GAAAA,EAAH,yIAOJQ,GAAaR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,oD,SCxCvB,EArBc,SAAC,GAAwB,IAAtBU,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAEvB,OACI,SAACH,EAAD,CACII,GAAE,iBAAYD,EAAKE,IACnBC,MAAO,CAAEC,KAAML,GAFnB,UAII,UAACT,EAAD,YACI,SAACC,EAAD,CACIc,IAAG,8CAAyCL,EAAKM,aACjDC,IAAG,iBAAYP,EAAKQ,SACvBR,EAAKS,QAAS,SAACjB,EAAD,KACf,UAACE,EAAD,YACI,SAACC,EAAD,UAAQK,EAAKU,kBACb,SAAC,EAAD,UAAOV,EAAKW,aAAaC,MAAM,EAAG,YAKrD,ECDD,EAhB0B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnBd,GAAWe,EAAAA,EAAAA,MAEjB,OACI,SAAC1B,EAAD,UACCyB,EAAME,KAAI,SAAAf,GAAI,OACX,SAAC,EAAD,CAEID,SAAUA,EACVC,KAAMA,GAFDA,EAAKE,GAFH,KAStB,ECyBD,EArCa,WACT,OAA0Cc,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,mCAAG,WAAMC,GAAN,uFAEZF,GAAa,GAFD,UAGWG,EAAAA,EAAAA,GAAW,wBAAyBD,GAH/C,OAGNE,EAHM,OAIZN,GAAiB,OAAIM,EAASC,UAJlB,gDAOM,iBAAf,KAAMC,MACLC,EAAAA,OAAAA,QAAe,uDARP,yBAYZP,GAAa,GAZD,oFAAH,sDAuBjB,OAPAQ,EAAAA,EAAAA,YAAU,WACF,IAAMN,EAAa,IAAIO,gBAGtB,OAFDR,EAAYC,GAEJ,kBAAMA,EAAWQ,OAAjB,CACX,GAAE,KAGH,gCACKX,IAAa,SAAC,IAAD,CAAYY,MAAM,uBAC/Bd,EAAce,QACb,SAAC,EAAD,CAAmBnB,MAAOI,IAC1B,OAGb,C,2ECvCDgB,IAAAA,SAAAA,QAAyB,6BACzB,IAGMV,EAAU,mCAAG,WAAOW,EAAaZ,EAAYa,GAAhC,uFAEOF,IAAAA,IAAUC,EAAa,CACzCE,OAAQ,CACJC,QAPI,mCAQJF,MAAAA,GAEJG,OAAQhB,EAAWgB,SAPR,cAETC,EAFS,yBASRA,EAAQC,MATA,2CAAH,0DAchB,K","sources":["components/ListTrendingFilms/ListTrendingFilms.styled.js","components/Item/Item.styled.js","components/Item/Item.jsx","components/ListTrendingFilms/ListTrendingFilms.jsx","pages/Home/Home.jsx","utilites/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    list-style: none;\n    display: flex;\n    gap: 28px;\n    flex-wrap: wrap;\n`;\n","import styled from \"styled-components\";\nimport { MdOutlineNoAdultContent } from \"react-icons/md\";\nimport { Link } from \"react-router-dom\";\n\nexport const Wrapper = styled.li`\n    width: 300px;\n    height: 360px;\n    background-color: rgba(0, 0, 0, 0.6);\n    border-radius: 5px;\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    transition: transform 0.3s ease;\n    overflow: hidden;\n    position: relative;\n\n    :hover, :focus {\n        tansform: scale(1.5);\n        box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n        transform: scale(1.05);\n        cursor: pointer;\n    }\n`;\n\nexport const PreviewImg = styled.img`\n    width: 100%;\n    height: 100%;\n`;\n\nexport const SvgAdult = styled(MdOutlineNoAdultContent)`\n    position: absolute;\n    top: 8px;\n    left: 8px;\n    width: 28px;\n    height: 28px;\n    color: #cc0000;\n`;\n\nexport const Details = styled.div`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    padding: 12px;\n    width: 100%;\n    height: 25%;\n    overflow-y: auto;\n    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.9));\n    box-shadow: rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px;\n    `;\n\nexport const Title = styled.h2`\n    margin-block-start: 0;\n    margin-block-end: 0;\n    margin-bottom: 12px;\n    font-size: 24px;\n    color: rgb(255, 245, 238, 0.8);\n`;\n\nexport const Date = styled.p`\n    margin-block-start: 0;\n    margin-block-end: 0;\n    font-size: 24px;\n    color: rgb(255, 245, 238, 0.8);\n`;\n\nexport const LinkStyled = styled(Link)`\n    text-decoration: none;\n`;","import { LinkStyled, Wrapper, PreviewImg, Details, SvgAdult, Title, Date } from \"./Item.styled\";\n\nconst Item  = ({ location, item }) => {\n\n    return (\n        <LinkStyled \n            to={`movies/${item.id}`} \n            state={{ from: location}}\n        >\n            <Wrapper>\n                <PreviewImg \n                    src={`https://image.tmdb.org/t/p/original/${item.poster_path}`} \n                    alt={`Poster ${item.title}`} />\n                {item.adult && <SvgAdult />}\n                <Details>\n                    <Title>{item.original_title}</Title>\n                    <Date>{item.release_date.slice(0, 4)}</Date>\n                </Details>\n            </Wrapper>\n        </LinkStyled>\n    )\n};\n\nexport default Item;","import { useLocation, } from \"react-router-dom\";\nimport { List } from \"./ListTrendingFilms.styled\";\nimport Item from \"components/Item/Item\";\n\nconst ListTrendingFilms = ({ items }) => {\n    const location = useLocation();\n\n    return (\n        <List>\n        {items.map(item => (\n            <Item \n                key={item.id} \n                location={location}\n                item={item}\n                />\n        ))}\n        </List> \n    )\n};\n\nexport default ListTrendingFilms;","import { useEffect, useState } from \"react\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport fetchFilms from '../../utilites/api';\nimport ListTrendingFilms from \"components/ListTrendingFilms\";\n\nconst Home = () => {\n    const [trendingFilms, setTrendingFilms] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const searchTrand = async controller => {\n        try {\n            setIsLoading(true);\n            const response = await fetchFilms('/3/trending/movie/day', controller);\n            setTrendingFilms([...response.results]);\n\n        } catch (error) {\n            if(error.code !== 'ERR_CANCELED') {\n                Notify.failure('OOps! Error loading information. Please, try again!');\n            };\n        } \n        finally {\n            setIsLoading(false);\n        };\n    };\n\n    useEffect(() => {\n            const controller = new AbortController();\n            searchTrand(controller);\n\n             return () => controller.abort();\n        }, []);\n\n    return (\n        <>\n            {isLoading && <SyncLoader color=\"rgb(204, 0, 0, .7)\" />}\n            {trendingFilms.length \n            ? <ListTrendingFilms items={trendingFilms} />\n            : null}\n        </>\n    );\n};\n\nexport default Home;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '84bdbe2f4baecea0c1be28902afc6a5b';\n\n\nconst fetchFilms = async (typeRequest, controller, query) => {\n\n    const request = await axios.get(typeRequest, {\n        params: {\n            api_key: API_KEY,\n            query,\n        },\n        signal: controller.signal,\n    });\n    return request.data;\n};\n\n\n\nexport default fetchFilms;"],"names":["List","styled","Wrapper","PreviewImg","SvgAdult","MdOutlineNoAdultContent","Details","Title","Date","LinkStyled","Link","location","item","to","id","state","from","src","poster_path","alt","title","adult","original_title","release_date","slice","items","useLocation","map","useState","trendingFilms","setTrendingFilms","isLoading","setIsLoading","searchTrand","controller","fetchFilms","response","results","code","Notify","useEffect","AbortController","abort","color","length","axios","typeRequest","query","params","api_key","signal","request","data"],"sourceRoot":""}